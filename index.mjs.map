{"version":3,"file":"index.mjs","sources":["../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name arcsine\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/arcsine}\n*/\nimport arcsine from '@stdlib/random-streams-arcsine';\nsetReadOnly( ns, 'arcsine', arcsine );\n\n/**\n* @name bernoulli\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/bernoulli}\n*/\nimport bernoulli from '@stdlib/random-streams-bernoulli';\nsetReadOnly( ns, 'bernoulli', bernoulli );\n\n/**\n* @name beta\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/beta}\n*/\nimport beta from '@stdlib/random-streams-beta';\nsetReadOnly( ns, 'beta', beta );\n\n/**\n* @name betaprime\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/betaprime}\n*/\nimport betaprime from '@stdlib/random-streams-betaprime';\nsetReadOnly( ns, 'betaprime', betaprime );\n\n/**\n* @name binomial\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/binomial}\n*/\nimport binomial from '@stdlib/random-streams-binomial';\nsetReadOnly( ns, 'binomial', binomial );\n\n/**\n* @name boxMuller\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/box-muller}\n*/\nimport boxMuller from '@stdlib/random-streams-box-muller';\nsetReadOnly( ns, 'boxMuller', boxMuller );\n\n/**\n* @name cauchy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/cauchy}\n*/\nimport cauchy from '@stdlib/random-streams-cauchy';\nsetReadOnly( ns, 'cauchy', cauchy );\n\n/**\n* @name chi\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/chi}\n*/\nimport chi from '@stdlib/random-streams-chi';\nsetReadOnly( ns, 'chi', chi );\n\n/**\n* @name chisquare\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/chisquare}\n*/\nimport chisquare from '@stdlib/random-streams-chisquare';\nsetReadOnly( ns, 'chisquare', chisquare );\n\n/**\n* @name cosine\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/cosine}\n*/\nimport cosine from '@stdlib/random-streams-cosine';\nsetReadOnly( ns, 'cosine', cosine );\n\n/**\n* @name discreteUniform\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/discrete-uniform}\n*/\nimport discreteUniform from '@stdlib/random-streams-discrete-uniform';\nsetReadOnly( ns, 'discreteUniform', discreteUniform );\n\n/**\n* @name erlang\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/erlang}\n*/\nimport erlang from '@stdlib/random-streams-erlang';\nsetReadOnly( ns, 'erlang', erlang );\n\n/**\n* @name exponential\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/exponential}\n*/\nimport exponential from '@stdlib/random-streams-exponential';\nsetReadOnly( ns, 'exponential', exponential );\n\n/**\n* @name f\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/f}\n*/\nimport f from '@stdlib/random-streams-f';\nsetReadOnly( ns, 'f', f );\n\n/**\n* @name frechet\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/frechet}\n*/\nimport frechet from '@stdlib/random-streams-frechet';\nsetReadOnly( ns, 'frechet', frechet );\n\n/**\n* @name gamma\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/gamma}\n*/\nimport gamma from '@stdlib/random-streams-gamma';\nsetReadOnly( ns, 'gamma', gamma );\n\n/**\n* @name geometric\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/geometric}\n*/\nimport geometric from '@stdlib/random-streams-geometric';\nsetReadOnly( ns, 'geometric', geometric );\n\n/**\n* @name gumbel\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/gumbel}\n*/\nimport gumbel from '@stdlib/random-streams-gumbel';\nsetReadOnly( ns, 'gumbel', gumbel );\n\n/**\n* @name hypergeometric\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/hypergeometric}\n*/\nimport hypergeometric from '@stdlib/random-streams-hypergeometric';\nsetReadOnly( ns, 'hypergeometric', hypergeometric );\n\n/**\n* @name improvedZiggurat\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/improved-ziggurat}\n*/\nimport improvedZiggurat from '@stdlib/random-streams-improved-ziggurat';\nsetReadOnly( ns, 'improvedZiggurat', improvedZiggurat );\n\n/**\n* @name invgamma\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/invgamma}\n*/\nimport invgamma from '@stdlib/random-streams-invgamma';\nsetReadOnly( ns, 'invgamma', invgamma );\n\n/**\n* @name kumaraswamy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/kumaraswamy}\n*/\nimport kumaraswamy from '@stdlib/random-streams-kumaraswamy';\nsetReadOnly( ns, 'kumaraswamy', kumaraswamy );\n\n/**\n* @name laplace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/laplace}\n*/\nimport laplace from '@stdlib/random-streams-laplace';\nsetReadOnly( ns, 'laplace', laplace );\n\n/**\n* @name levy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/levy}\n*/\nimport levy from '@stdlib/random-streams-levy';\nsetReadOnly( ns, 'levy', levy );\n\n/**\n* @name logistic\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/logistic}\n*/\nimport logistic from '@stdlib/random-streams-logistic';\nsetReadOnly( ns, 'logistic', logistic );\n\n/**\n* @name lognormal\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/lognormal}\n*/\nimport lognormal from '@stdlib/random-streams-lognormal';\nsetReadOnly( ns, 'lognormal', lognormal );\n\n/**\n* @name minstd\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/minstd}\n*/\nimport minstd from '@stdlib/random-streams-minstd';\nsetReadOnly( ns, 'minstd', minstd );\n\n/**\n* @name minstdShuffle\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/minstd-shuffle}\n*/\nimport minstdShuffle from '@stdlib/random-streams-minstd-shuffle';\nsetReadOnly( ns, 'minstdShuffle', minstdShuffle );\n\n/**\n* @name mt19937\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/mt19937}\n*/\nimport mt19937 from '@stdlib/random-streams-mt19937';\nsetReadOnly( ns, 'mt19937', mt19937 );\n\n/**\n* @name negativeBinomial\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/negative-binomial}\n*/\nimport negativeBinomial from '@stdlib/random-streams-negative-binomial';\nsetReadOnly( ns, 'negativeBinomial', negativeBinomial );\n\n/**\n* @name normal\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/normal}\n*/\nimport normal from '@stdlib/random-streams-normal';\nsetReadOnly( ns, 'normal', normal );\n\n/**\n* @name pareto1\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/pareto-type1}\n*/\nimport pareto1 from '@stdlib/random-streams-pareto-type1';\nsetReadOnly( ns, 'pareto1', pareto1 );\n\n/**\n* @name poisson\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/poisson}\n*/\nimport poisson from '@stdlib/random-streams-poisson';\nsetReadOnly( ns, 'poisson', poisson );\n\n/**\n* @name randi\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/randi}\n*/\nimport randi from '@stdlib/random-streams-randi';\nsetReadOnly( ns, 'randi', randi );\n\n/**\n* @name randn\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/randn}\n*/\nimport randn from '@stdlib/random-streams-randn';\nsetReadOnly( ns, 'randn', randn );\n\n/**\n* @name randu\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/randu}\n*/\nimport randu from '@stdlib/random-streams-randu';\nsetReadOnly( ns, 'randu', randu );\n\n/**\n* @name rayleigh\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/rayleigh}\n*/\nimport rayleigh from '@stdlib/random-streams-rayleigh';\nsetReadOnly( ns, 'rayleigh', rayleigh );\n\n/**\n* @name t\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/t}\n*/\nimport t from '@stdlib/random-streams-t';\nsetReadOnly( ns, 't', t );\n\n/**\n* @name triangular\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/triangular}\n*/\nimport triangular from '@stdlib/random-streams-triangular';\nsetReadOnly( ns, 'triangular', triangular );\n\n/**\n* @name uniform\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/uniform}\n*/\nimport uniform from '@stdlib/random-streams-uniform';\nsetReadOnly( ns, 'uniform', uniform );\n\n/**\n* @name weibull\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/weibull}\n*/\nimport weibull from '@stdlib/random-streams-weibull';\nsetReadOnly( ns, 'weibull', weibull );\n\n\n// EXPORTS //\n\nexport default ns;\n"],"names":["ns","setReadOnly","arcsine","bernoulli","beta","betaprime","binomial","boxMuller","cauchy","chi","chisquare","cosine","discreteUniform","erlang","exponential","f","frechet","gamma","geometric","gumbel","hypergeometric","improvedZiggurat","invgamma","kumaraswamy","laplace","levy","logistic","lognormal","minstd","minstdShuffle","mt19937","negativeBinomial","normal","pareto1","poisson","randi","randn","randu","rayleigh","t","triangular","uniform","weibull"],"mappings":";;i9QAoCA,IAAAA,EAAA,CAAA,EAUAC,EAAAD,EAAA,UAAAE,GAUAD,EAAAD,EAAA,YAAAG,GAUAF,EAAAD,EAAA,OAAAI,GAUAH,EAAAD,EAAA,YAAAK,GAUAJ,EAAAD,EAAA,WAAAM,GAUAL,EAAAD,EAAA,YAAAO,GAUAN,EAAAD,EAAA,SAAAQ,GAUAP,EAAAD,EAAA,MAAAS,GAUAR,EAAAD,EAAA,YAAAU,GAUAT,EAAAD,EAAA,SAAAW,GAUAV,EAAAD,EAAA,kBAAAY,GAUAX,EAAAD,EAAA,SAAAa,GAUAZ,EAAAD,EAAA,cAAAc,GAUAb,EAAAD,EAAA,IAAAe,GAUAd,EAAAD,EAAA,UAAAgB,GAUAf,EAAAD,EAAA,QAAAiB,GAUAhB,EAAAD,EAAA,YAAAkB,GAUAjB,EAAAD,EAAA,SAAAmB,GAUAlB,EAAAD,EAAA,iBAAAoB,GAUAnB,EAAAD,EAAA,mBAAAqB,GAUApB,EAAAD,EAAA,WAAAsB,GAUArB,EAAAD,EAAA,cAAAuB,GAUAtB,EAAAD,EAAA,UAAAwB,GAUAvB,EAAAD,EAAA,OAAAyB,GAUAxB,EAAAD,EAAA,WAAA0B,GAUAzB,EAAAD,EAAA,YAAA2B,GAUA1B,EAAAD,EAAA,SAAA4B,GAUA3B,EAAAD,EAAA,gBAAA6B,GAUA5B,EAAAD,EAAA,UAAA8B,GAUA7B,EAAAD,EAAA,mBAAA+B,GAUA9B,EAAAD,EAAA,SAAAgC,GAUA/B,EAAAD,EAAA,UAAAiC,GAUAhC,EAAAD,EAAA,UAAAkC,GAUAjC,EAAAD,EAAA,QAAAmC,GAUAlC,EAAAD,EAAA,QAAAoC,GAUAnC,EAAAD,EAAA,QAAAqC,GAUApC,EAAAD,EAAA,WAAAsC,GAUArC,EAAAD,EAAA,IAAAuC,GAUAtC,EAAAD,EAAA,aAAAwC,GAUAvC,EAAAD,EAAA,UAAAyC,GAUAxC,EAAAD,EAAA,UAAA0C"}