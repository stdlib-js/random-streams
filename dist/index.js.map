{
  "version": 3,
  "sources": ["../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-read-only-property' );\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name arcsine\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/arcsine}\n*/\nsetReadOnly( ns, 'arcsine', require( '@stdlib/random-streams-arcsine' ) );\n\n/**\n* @name bernoulli\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/bernoulli}\n*/\nsetReadOnly( ns, 'bernoulli', require( '@stdlib/random-streams-bernoulli' ) );\n\n/**\n* @name beta\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/beta}\n*/\nsetReadOnly( ns, 'beta', require( '@stdlib/random-streams-beta' ) );\n\n/**\n* @name betaprime\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/betaprime}\n*/\nsetReadOnly( ns, 'betaprime', require( '@stdlib/random-streams-betaprime' ) );\n\n/**\n* @name binomial\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/binomial}\n*/\nsetReadOnly( ns, 'binomial', require( '@stdlib/random-streams-binomial' ) );\n\n/**\n* @name boxMuller\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/box-muller}\n*/\nsetReadOnly( ns, 'boxMuller', require( '@stdlib/random-streams-box-muller' ) );\n\n/**\n* @name cauchy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/cauchy}\n*/\nsetReadOnly( ns, 'cauchy', require( '@stdlib/random-streams-cauchy' ) );\n\n/**\n* @name chi\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/chi}\n*/\nsetReadOnly( ns, 'chi', require( '@stdlib/random-streams-chi' ) );\n\n/**\n* @name chisquare\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/chisquare}\n*/\nsetReadOnly( ns, 'chisquare', require( '@stdlib/random-streams-chisquare' ) );\n\n/**\n* @name cosine\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/cosine}\n*/\nsetReadOnly( ns, 'cosine', require( '@stdlib/random-streams-cosine' ) );\n\n/**\n* @name discreteUniform\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/discrete-uniform}\n*/\nsetReadOnly( ns, 'discreteUniform', require( '@stdlib/random-streams-discrete-uniform' ) );\n\n/**\n* @name erlang\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/erlang}\n*/\nsetReadOnly( ns, 'erlang', require( '@stdlib/random-streams-erlang' ) );\n\n/**\n* @name exponential\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/exponential}\n*/\nsetReadOnly( ns, 'exponential', require( '@stdlib/random-streams-exponential' ) );\n\n/**\n* @name f\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/f}\n*/\nsetReadOnly( ns, 'f', require( '@stdlib/random-streams-f' ) );\n\n/**\n* @name frechet\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/frechet}\n*/\nsetReadOnly( ns, 'frechet', require( '@stdlib/random-streams-frechet' ) );\n\n/**\n* @name gamma\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/gamma}\n*/\nsetReadOnly( ns, 'gamma', require( '@stdlib/random-streams-gamma' ) );\n\n/**\n* @name geometric\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/geometric}\n*/\nsetReadOnly( ns, 'geometric', require( '@stdlib/random-streams-geometric' ) );\n\n/**\n* @name gumbel\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/gumbel}\n*/\nsetReadOnly( ns, 'gumbel', require( '@stdlib/random-streams-gumbel' ) );\n\n/**\n* @name hypergeometric\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/hypergeometric}\n*/\nsetReadOnly( ns, 'hypergeometric', require( '@stdlib/random-streams-hypergeometric' ) );\n\n/**\n* @name improvedZiggurat\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/improved-ziggurat}\n*/\nsetReadOnly( ns, 'improvedZiggurat', require( '@stdlib/random-streams-improved-ziggurat' ) );\n\n/**\n* @name invgamma\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/invgamma}\n*/\nsetReadOnly( ns, 'invgamma', require( '@stdlib/random-streams-invgamma' ) );\n\n/**\n* @name kumaraswamy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/kumaraswamy}\n*/\nsetReadOnly( ns, 'kumaraswamy', require( '@stdlib/random-streams-kumaraswamy' ) );\n\n/**\n* @name laplace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/laplace}\n*/\nsetReadOnly( ns, 'laplace', require( '@stdlib/random-streams-laplace' ) );\n\n/**\n* @name levy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/levy}\n*/\nsetReadOnly( ns, 'levy', require( '@stdlib/random-streams-levy' ) );\n\n/**\n* @name logistic\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/logistic}\n*/\nsetReadOnly( ns, 'logistic', require( '@stdlib/random-streams-logistic' ) );\n\n/**\n* @name lognormal\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/lognormal}\n*/\nsetReadOnly( ns, 'lognormal', require( '@stdlib/random-streams-lognormal' ) );\n\n/**\n* @name minstd\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/minstd}\n*/\nsetReadOnly( ns, 'minstd', require( '@stdlib/random-streams-minstd' ) );\n\n/**\n* @name minstdShuffle\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/minstd-shuffle}\n*/\nsetReadOnly( ns, 'minstdShuffle', require( '@stdlib/random-streams-minstd-shuffle' ) );\n\n/**\n* @name mt19937\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/mt19937}\n*/\nsetReadOnly( ns, 'mt19937', require( '@stdlib/random-streams-mt19937' ) );\n\n/**\n* @name negativeBinomial\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/negative-binomial}\n*/\nsetReadOnly( ns, 'negativeBinomial', require( '@stdlib/random-streams-negative-binomial' ) );\n\n/**\n* @name normal\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/normal}\n*/\nsetReadOnly( ns, 'normal', require( '@stdlib/random-streams-normal' ) );\n\n/**\n* @name pareto1\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/pareto-type1}\n*/\nsetReadOnly( ns, 'pareto1', require( '@stdlib/random-streams-pareto-type1' ) );\n\n/**\n* @name poisson\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/poisson}\n*/\nsetReadOnly( ns, 'poisson', require( '@stdlib/random-streams-poisson' ) );\n\n/**\n* @name randi\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/randi}\n*/\nsetReadOnly( ns, 'randi', require( '@stdlib/random-streams-randi' ) );\n\n/**\n* @name randn\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/randn}\n*/\nsetReadOnly( ns, 'randn', require( '@stdlib/random-streams-randn' ) );\n\n/**\n* @name randu\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/randu}\n*/\nsetReadOnly( ns, 'randu', require( '@stdlib/random-streams-randu' ) );\n\n/**\n* @name rayleigh\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/rayleigh}\n*/\nsetReadOnly( ns, 'rayleigh', require( '@stdlib/random-streams-rayleigh' ) );\n\n/**\n* @name t\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/t}\n*/\nsetReadOnly( ns, 't', require( '@stdlib/random-streams-t' ) );\n\n/**\n* @name triangular\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/triangular}\n*/\nsetReadOnly( ns, 'triangular', require( '@stdlib/random-streams-triangular' ) );\n\n/**\n* @name uniform\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/uniform}\n*/\nsetReadOnly( ns, 'uniform', require( '@stdlib/random-streams-uniform' ) );\n\n/**\n* @name weibull\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/streams/weibull}\n*/\nsetReadOnly( ns, 'weibull', require( '@stdlib/random-streams-weibull' ) );\n\n\n// EXPORTS //\n\nmodule.exports = ns;\n"],
  "mappings": "aA0BA,IAAIA,EAAc,QAAS,yCAA0C,EAUjEC,EAAK,CAAC,EASVD,EAAaC,EAAI,UAAW,QAAS,gCAAiC,CAAE,EASxED,EAAaC,EAAI,YAAa,QAAS,kCAAmC,CAAE,EAS5ED,EAAaC,EAAI,OAAQ,QAAS,6BAA8B,CAAE,EASlED,EAAaC,EAAI,YAAa,QAAS,kCAAmC,CAAE,EAS5ED,EAAaC,EAAI,WAAY,QAAS,iCAAkC,CAAE,EAS1ED,EAAaC,EAAI,YAAa,QAAS,mCAAoC,CAAE,EAS7ED,EAAaC,EAAI,SAAU,QAAS,+BAAgC,CAAE,EAStED,EAAaC,EAAI,MAAO,QAAS,4BAA6B,CAAE,EAShED,EAAaC,EAAI,YAAa,QAAS,kCAAmC,CAAE,EAS5ED,EAAaC,EAAI,SAAU,QAAS,+BAAgC,CAAE,EAStED,EAAaC,EAAI,kBAAmB,QAAS,yCAA0C,CAAE,EASzFD,EAAaC,EAAI,SAAU,QAAS,+BAAgC,CAAE,EAStED,EAAaC,EAAI,cAAe,QAAS,oCAAqC,CAAE,EAShFD,EAAaC,EAAI,IAAK,QAAS,0BAA2B,CAAE,EAS5DD,EAAaC,EAAI,UAAW,QAAS,gCAAiC,CAAE,EASxED,EAAaC,EAAI,QAAS,QAAS,8BAA+B,CAAE,EASpED,EAAaC,EAAI,YAAa,QAAS,kCAAmC,CAAE,EAS5ED,EAAaC,EAAI,SAAU,QAAS,+BAAgC,CAAE,EAStED,EAAaC,EAAI,iBAAkB,QAAS,uCAAwC,CAAE,EAStFD,EAAaC,EAAI,mBAAoB,QAAS,0CAA2C,CAAE,EAS3FD,EAAaC,EAAI,WAAY,QAAS,iCAAkC,CAAE,EAS1ED,EAAaC,EAAI,cAAe,QAAS,oCAAqC,CAAE,EAShFD,EAAaC,EAAI,UAAW,QAAS,gCAAiC,CAAE,EASxED,EAAaC,EAAI,OAAQ,QAAS,6BAA8B,CAAE,EASlED,EAAaC,EAAI,WAAY,QAAS,iCAAkC,CAAE,EAS1ED,EAAaC,EAAI,YAAa,QAAS,kCAAmC,CAAE,EAS5ED,EAAaC,EAAI,SAAU,QAAS,+BAAgC,CAAE,EAStED,EAAaC,EAAI,gBAAiB,QAAS,uCAAwC,CAAE,EASrFD,EAAaC,EAAI,UAAW,QAAS,gCAAiC,CAAE,EASxED,EAAaC,EAAI,mBAAoB,QAAS,0CAA2C,CAAE,EAS3FD,EAAaC,EAAI,SAAU,QAAS,+BAAgC,CAAE,EAStED,EAAaC,EAAI,UAAW,QAAS,qCAAsC,CAAE,EAS7ED,EAAaC,EAAI,UAAW,QAAS,gCAAiC,CAAE,EASxED,EAAaC,EAAI,QAAS,QAAS,8BAA+B,CAAE,EASpED,EAAaC,EAAI,QAAS,QAAS,8BAA+B,CAAE,EASpED,EAAaC,EAAI,QAAS,QAAS,8BAA+B,CAAE,EASpED,EAAaC,EAAI,WAAY,QAAS,iCAAkC,CAAE,EAS1ED,EAAaC,EAAI,IAAK,QAAS,0BAA2B,CAAE,EAS5DD,EAAaC,EAAI,aAAc,QAAS,mCAAoC,CAAE,EAS9ED,EAAaC,EAAI,UAAW,QAAS,gCAAiC,CAAE,EASxED,EAAaC,EAAI,UAAW,QAAS,gCAAiC,CAAE,EAKxE,OAAO,QAAUA",
  "names": ["setReadOnly", "ns"]
}
